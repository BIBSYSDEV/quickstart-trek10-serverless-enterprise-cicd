AWSTemplateFormatVersion: '2010-09-09'
Description: >
  (qs-1ph8nehbe)
  Serverless CICD Quick Start
  Shared services account resources for a project
  (A project entry containing the account-details for a project that is being deployed by the
   tooling account)

Parameters:
  AppName:
    Description: Application name, used for the repository and child stack name
    Type: String
    Default: Sample
  DevAwsAccountId:
    Description: AWS account ID for development account
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
    Default: '159527342995'
  ProdAwsAccountId:
    Description: AWS account ID for production account
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
    Default: '159527342995'
  BuildImageName:
    Description: Docker image for application build
    Type: String
    Default: aws/codebuild/nodejs:10.1.0
  ArtifactBucket:
    Description: Artifact S3 bucket
    Type: String
  ArtifactBucketKeyArn:
    Description: ARN of the artifact bucket KMS key
    Type: String
  PipelineServiceRoleArn:
    Description: Pipeline service role ARN
    Type: String
  SamTranslationBucket:
    Description: S3 bucket for SAM translations
    Type: String
  RepoName:
    Description: Repository name
    Type: String
  GitHubToken:
    Description: GitHub token
    Type: String
    NoEcho: true

Conditions:
  AddDevAccountPermissions: !Not [!Equals [ !Ref DevAwsAccountId, '' ]]
  AddProdAccountPermissions: !Not [!Equals [ !Ref ProdAwsAccountId, '' ]]

Resources:
  SecretsManagerKey: # This key is used to encrypt/decrypt the secret in Secrets Manager
    Type: AWS::KMS::Key
    Properties:
      Description: "Key for encrypting Secret Manager secret"
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow the dev and prod accounts to the key
            Effect: Allow
            Principal:
              AWS:
                - !If
                  - AddDevAccountPermissions
                  - !Sub ${DevAwsAccountId}
                  - !Ref AWS::NoValue
                - !If
                  - AddProdAccountPermissions
                  - !Sub ${ProdAwsAccountId}
                  - !Ref AWS::NoValue
            Action:
              - kms:Decrypt
            Resource: '*'

  SMSecretAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${AppName}-secrets-manager'
      TargetKeyId: !Ref SecretsManagerKey

  CustomDataParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${RepoName}CustomData'
      Type: String
      Value: !Sub '{"RepoName": "${RepoName}","GitHubToken": "${GitHubToken}","SecretsManagerKey": "${SecretsManagerKey.Arn}","AppName": "${AppName}","BuildImageName": "${BuildImageName}","ArtifactBucket": "${ArtifactBucket}","ArtifactBucketKeyArn": "${ArtifactBucketKeyArn}","SamTranslationBucket": "${SamTranslationBucket}","PipelineServiceRoleArn": "${PipelineServiceRoleArn}","DevAwsAccountId": "${DevAwsAccountId}"}'

Outputs:
  SecretsManagerAliasName:
    Description: KMS key alias for the use of secrets across accounts
    Value: !Ref SecretsManagerKey
  SecretsManagerKey:
    Description: KMS key for the use of secrets across accounts
    Value: !GetAtt SecretsManagerKey.Arn